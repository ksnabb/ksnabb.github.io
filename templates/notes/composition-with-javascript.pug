extends ../boilerplate/basic.pug

block head
  link(rel="stylesheet", href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/default.min.css")

block body
  a(href="/") back

  h1 Composition with Javascript

  p.
     A composition in functional programming is a function that has been 'composed' with two functions.

  p.
    More formally a composition is when we have a function <em>f</em>
    that takes an argument of type <em>A</em> and returns <em>B</em>
    <em>(A &rarr; B)</em> and another function <em>g</em> that takes
    an argument of type <em>B</em> and returns <em>C</em>
    <em>(B &rarr; C)</em>. Then we can create a function out of
    <em>f</em> and <em>g</em> that takes an argument of type
    <em>A</em> and returns <em>C</em> <em>(A &rarr; C)</em>.

  p.
     This type of function composition can be denoted as
     <em>f &compfn; g</em>.

  p.
     Further function composition is always associative. Which means that
     <em>f &compfn; (g &compfn; h)</em> gives the same result as <em>(f &compfn; g) &compfn; h</em>.

  p Below is an implementation of a compose function in JavaScript.

  script(src="//gist.github.com/ksnabb/a023f3643c50cfdc6d272a0e738d1106.js")
  script(src="/js/notes/composition-with-javascript.js")

